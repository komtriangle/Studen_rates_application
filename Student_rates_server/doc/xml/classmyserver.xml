<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.0" xml:lang="ru">
  <compounddef id="classmyserver" kind="class" language="C++" prot="public">
    <compoundname>myserver</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QTcpServer</basecompoundref>
    <includes refid="server_8h" local="no">server.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmyserver_1a6c54fb0f829314e8cbbf01586d85ed18" prot="private" static="no" mutable="no">
        <type>QTcpSocket *</type>
        <definition>QTcpSocket* myserver::socket</definition>
        <argsstring></argsstring>
        <name>socket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Documents/Student_rates_server/server/server.h" line="155" column="16" bodyfile="Documents/Student_rates_server/server/server.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmyserver_1a61f0220fffb9e3b214089d594aea10f1" prot="private" static="no" mutable="no">
        <type>QSqlDatabase</type>
        <definition>QSqlDatabase myserver::db</definition>
        <argsstring></argsstring>
        <name>db</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Documents/Student_rates_server/server/server.h" line="156" column="18" bodyfile="Documents/Student_rates_server/server/server.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmyserver_1ac63e26411d9ab3ac8dd69a1e31095989" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>myserver::myserver</definition>
        <argsstring>()</argsstring>
        <name>myserver</name>
        <briefdescription>
<para>myserver Конструктор </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Documents/Student_rates_server/server/server.h" line="24" column="5" bodyfile="Documents/Student_rates_server/server/server.cpp" bodystart="4" bodyend="4"/>
      </memberdef>
      <memberdef kind="function" id="classmyserver_1a074f8ee857234456b6369228171f87f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>myserver::~myserver</definition>
        <argsstring>()</argsstring>
        <name>~myserver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Documents/Student_rates_server/server/server.h" line="25" column="5" bodyfile="Documents/Student_rates_server/server/server.cpp" bodystart="5" bodyend="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-slot">
      <memberdef kind="slot" id="classmyserver_1ac0262beea1a4f65f458bb2e022be899f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myserver::startServer</definition>
        <argsstring>()</argsstring>
        <name>startServer</name>
        <briefdescription>
<para>Вызывается в методе main при запуске приложения. В методе создается экзмепляр QSqlDatabase. Устнавливается название БД. После этого идут 7 запросов к этой БД, которые создают таблицы, если он не созданы (создание таблиц происходит, когда программа впервые запускается на этом компьютере). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Documents/Student_rates_server/server/server.h" line="36" column="10" bodyfile="Documents/Student_rates_server/server/server.cpp" bodystart="10" bodyend="64"/>
      </memberdef>
      <memberdef kind="slot" id="classmyserver_1a0ead7e6ac76160295e6d4955362c1372" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myserver::incomingConnection</definition>
        <argsstring>(qintptr socketDescriptor)</argsstring>
        <name>incomingConnection</name>
        <param>
          <type>qintptr</type>
          <declname>socketDescriptor</declname>
        </param>
        <briefdescription>
<para>Виртуальная функция из класса QtcpServer, она вызывается, когда доспутно новое соединение. Внутри функции создается сокет и ему устанавливается дескриптор, полученный как параметр. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>socketDescriptor</parametername>
</parameternamelist>
<parameterdescription>
<para>дескриптор сокета </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Documents/Student_rates_server/server/server.h" line="44" column="10" bodyfile="Documents/Student_rates_server/server/server.cpp" bodystart="66" bodyend="73"/>
      </memberdef>
      <memberdef kind="slot" id="classmyserver_1a22c4dbce53178b0e799df2bb5bf384e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myserver::sockReady</definition>
        <argsstring>()</argsstring>
        <name>sockReady</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Documents/Student_rates_server/server/server.h" line="45" column="10" bodyfile="Documents/Student_rates_server/server/server.cpp" bodystart="74" bodyend="138"/>
      </memberdef>
      <memberdef kind="slot" id="classmyserver_1a667c57294dd0c9573b9615840d3ff7aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myserver::sockDisc</definition>
        <argsstring>()</argsstring>
        <name>sockDisc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Documents/Student_rates_server/server/server.h" line="46" column="10" bodyfile="Documents/Student_rates_server/server/server.cpp" bodystart="482" bodyend="484"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmyserver_1a9029ccccdc2871814af8ec19cd1d0d7e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myserver::selectGroups</definition>
        <argsstring>()</argsstring>
        <name>selectGroups</name>
        <briefdescription>
<para>Делает запрос к БД на получение всех учебных групп. После этого отправляет полученные данные клиенты. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Documents/Student_rates_server/server/server.h" line="53" column="10" bodyfile="Documents/Student_rates_server/server/server.cpp" bodystart="142" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classmyserver_1aa1c07695b4cb6c4772a23e633e6293d1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myserver::getAllStudents</definition>
        <argsstring>()</argsstring>
        <name>getAllStudents</name>
        <briefdescription>
<para>Делает запрос к БД на получение всех студентов. После этого отправляет полученные данные студенту. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Documents/Student_rates_server/server/server.h" line="58" column="10" bodyfile="Documents/Student_rates_server/server/server.cpp" bodystart="485" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="classmyserver_1a7b1e5318d193daceaba56e70d85a1cae" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myserver::getStudentsFromGroup</definition>
        <argsstring>(QString group_Id)</argsstring>
        <name>getStudentsFromGroup</name>
        <param>
          <type>QString</type>
          <declname>group_Id</declname>
        </param>
        <briefdescription>
<para>Делает запрос к БД на получение студентов из учебной группы. Возращает полученные данные о студентах клиенту </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>group_Id</parametername>
</parameternamelist>
<parameterdescription>
<para>- первичный ключ учебной группы, студентов которой нужно получить </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Documents/Student_rates_server/server/server.h" line="66" column="10" bodyfile="Documents/Student_rates_server/server/server.cpp" bodystart="170" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classmyserver_1afab876e482460877a586c804c2e4f6b8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myserver::insertRate</definition>
        <argsstring>(QString Student_Id, QString Lesson_Id, QString Rate)</argsstring>
        <name>insertRate</name>
        <param>
          <type>QString</type>
          <declname>Student_Id</declname>
        </param>
        <param>
          <type>QString</type>
          <declname>Lesson_Id</declname>
        </param>
        <param>
          <type>QString</type>
          <declname>Rate</declname>
        </param>
        <briefdescription>
<para>Делает запрос к БД на изменение балла студента за занятие. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Student_Id</parametername>
</parameternamelist>
<parameterdescription>
<para>- первичный ключ студента, которому будет изменен балл </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Lesson_Id</parametername>
</parameternamelist>
<parameterdescription>
<para>- первичный ключ занятия за которое будет изменен балл </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Rate</parametername>
</parameternamelist>
<parameterdescription>
<para>- балл который будет внесен в БД </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Documents/Student_rates_server/server/server.h" line="76" column="10" bodyfile="Documents/Student_rates_server/server/server.cpp" bodystart="224" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="classmyserver_1a5a3c3fc0310a98f06197383423ebaa6d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myserver::getRatesForStudentAndLesson</definition>
        <argsstring>(QString Student_Id, QString Lesson_Id)</argsstring>
        <name>getRatesForStudentAndLesson</name>
        <param>
          <type>QString</type>
          <declname>Student_Id</declname>
        </param>
        <param>
          <type>QString</type>
          <declname>Lesson_Id</declname>
        </param>
        <briefdescription>
<para>Делает запрос к БД на получение балла студента. Затем возращает полученный балл клиенту. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Student_Id</parametername>
</parameternamelist>
<parameterdescription>
<para>- первичный ключ студента, балл которого нам нужно получить. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Lesson_Id</parametername>
</parameternamelist>
<parameterdescription>
<para>- первичный ключ занятия, балл за которой нам нужно получить. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Documents/Student_rates_server/server/server.h" line="86" column="10" bodyfile="Documents/Student_rates_server/server/server.cpp" bodystart="276" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classmyserver_1a210eeacd66b3e58c302643210d82965b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myserver::authorization</definition>
        <argsstring>(QString login, QString password)</argsstring>
        <name>authorization</name>
        <param>
          <type>QString</type>
          <declname>login</declname>
        </param>
        <param>
          <type>QString</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Делает запрос к БД с целью проверить, есть в ли в БД пользователь с логином и паролем, полученными из параметров. В ответ возвращает клиенту ответ &quot;Успешно&quot; или &quot;Неуспешно&quot;, в зависимости от того, найдет пользователь или нет </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>login</parametername>
</parameternamelist>
<parameterdescription>
<para>- имя пользоватлея </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>password</parametername>
</parameternamelist>
<parameterdescription>
<para>- пароль </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Documents/Student_rates_server/server/server.h" line="96" column="10" bodyfile="Documents/Student_rates_server/server/server.cpp" bodystart="294" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classmyserver_1a058ac3bf82d1e370cb3f0bb598b3660a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myserver::getAllRatesForGroupAndCourse</definition>
        <argsstring>(QString Group_Id, QString Course_Id)</argsstring>
        <name>getAllRatesForGroupAndCourse</name>
        <param>
          <type>QString</type>
          <declname>Group_Id</declname>
        </param>
        <param>
          <type>QString</type>
          <declname>Course_Id</declname>
        </param>
        <briefdescription>
<para>Получает из БД набор всех баллов студентов из учбеной группы по учебному курсу. Возвращает клиенту набор баллов. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Group_Id</parametername>
</parameternamelist>
<parameterdescription>
<para>- первичный ключ группы, баллы студентов который нужно получить </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Course_Id</parametername>
</parameternamelist>
<parameterdescription>
<para>- первичный ключ учебного курса, баллы за который нужно получить </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Documents/Student_rates_server/server/server.h" line="106" column="10" bodyfile="Documents/Student_rates_server/server/server.cpp" bodystart="315" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classmyserver_1a1f9701f5f91508598c0fcb5a90a7033d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myserver::getLessons</definition>
        <argsstring>(QString Group_Id, QString Course_Id)</argsstring>
        <name>getLessons</name>
        <param>
          <type>QString</type>
          <declname>Group_Id</declname>
        </param>
        <param>
          <type>QString</type>
          <declname>Course_Id</declname>
        </param>
        <briefdescription>
<para>Получает из БД список занятий для группы по курсу. Возвращает полученные данные клиенту. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Group_Id</parametername>
</parameternamelist>
<parameterdescription>
<para>- первичный ключ группы, список занятий для которой нужно получить </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Course_Id</parametername>
</parameternamelist>
<parameterdescription>
<para>- первичный ключ курса, занятия по которому нам нужно получить </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Documents/Student_rates_server/server/server.h" line="115" column="10" bodyfile="Documents/Student_rates_server/server/server.cpp" bodystart="358" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classmyserver_1adf0c1e9e9255d52250a67a18f042346e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myserver::getGroupsForAddLesson</definition>
        <argsstring>()</argsstring>
        <name>getGroupsForAddLesson</name>
        <briefdescription>
<para>Получает из БД список учебных групп для добавления занятия. Возвращает полученные данные клиенту. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Documents/Student_rates_server/server/server.h" line="121" column="10" bodyfile="Documents/Student_rates_server/server/server.cpp" bodystart="389" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="classmyserver_1a76ec0e9877030afe8e7fbb78c1a99d90" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myserver::getCoursesForAddLesson</definition>
        <argsstring>(QString group_Id)</argsstring>
        <name>getCoursesForAddLesson</name>
        <param>
          <type>QString</type>
          <declname>group_Id</declname>
        </param>
        <briefdescription>
<para>Получает из БД набор курсов, которые у учебной группой из параметра. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>group_Id</parametername>
</parameternamelist>
<parameterdescription>
<para>- первичный ключ учебной группы, курсы которой нужно получить </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Documents/Student_rates_server/server/server.h" line="128" column="10" bodyfile="Documents/Student_rates_server/server/server.cpp" bodystart="413" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="classmyserver_1aa57605cdfb022404dbd4d35c6f0e867b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myserver::AddLesson</definition>
        <argsstring>(QString Group_Id, QString Course_Id, QString Date)</argsstring>
        <name>AddLesson</name>
        <param>
          <type>QString</type>
          <declname>Group_Id</declname>
        </param>
        <param>
          <type>QString</type>
          <declname>Course_Id</declname>
        </param>
        <param>
          <type>QString</type>
          <declname>Date</declname>
        </param>
        <briefdescription>
<para>Добавляет в таблицу с занятиями новое занятие </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Group_Id</parametername>
</parameternamelist>
<parameterdescription>
<para>- первичный ключ группы, для которой добавляется занятие </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Course_Id</parametername>
</parameternamelist>
<parameterdescription>
<para>- первичный ключ курса, по которому добавляется занятие </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Date</parametername>
</parameternamelist>
<parameterdescription>
<para>- дата добавляемого занятия </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Documents/Student_rates_server/server/server.h" line="138" column="10" bodyfile="Documents/Student_rates_server/server/server.cpp" bodystart="442" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="classmyserver_1ae734051abc8cb3406be2717212cbcf89" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myserver::getCoursesForStudent</definition>
        <argsstring>(QString student_Id)</argsstring>
        <name>getCoursesForStudent</name>
        <param>
          <type>QString</type>
          <declname>student_Id</declname>
        </param>
        <briefdescription>
<para>Получает из БД набор курсов, для группы, к которой принадлежит студент, первичный ключ которой передается параметром. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>student_Id</parametername>
</parameternamelist>
<parameterdescription>
<para>- первичный ключ студента. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Documents/Student_rates_server/server/server.h" line="145" column="10" bodyfile="Documents/Student_rates_server/server/server.cpp" bodystart="510" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="classmyserver_1ac3b8e1a161aee25580bc3dc4e19a2343" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myserver::getLessonForStudentAndCourse</definition>
        <argsstring>(QString Student_Id, QString Course_Id)</argsstring>
        <name>getLessonForStudentAndCourse</name>
        <param>
          <type>QString</type>
          <declname>Student_Id</declname>
        </param>
        <param>
          <type>QString</type>
          <declname>Course_Id</declname>
        </param>
        <briefdescription>
<para>Получает список занятий, по курсу, первичный ключ которого передается параметром и группы, к которой относится студент. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Student_Id</parametername>
</parameternamelist>
<parameterdescription>
<para>- первичный ключ студента </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Course_Id</parametername>
</parameternamelist>
<parameterdescription>
<para>- первичный ключ курса </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Documents/Student_rates_server/server/server.h" line="152" column="10" bodyfile="Documents/Student_rates_server/server/server.cpp" bodystart="541" bodyend="570"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Класс принимает запросы от клиента, делает запросы к БД, отправляет клиенту ответ </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>myserver</label>
        <link refid="classmyserver"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QTcpServer</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>myserver</label>
        <link refid="classmyserver"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QTcpServer</label>
      </node>
    </collaborationgraph>
    <location file="Documents/Student_rates_server/server/server.h" line="18" column="1" bodyfile="Documents/Student_rates_server/server/server.h" bodystart="18" bodyend="157"/>
    <listofallmembers>
      <member refid="classmyserver_1aa57605cdfb022404dbd4d35c6f0e867b" prot="private" virt="non-virtual"><scope>myserver</scope><name>AddLesson</name></member>
      <member refid="classmyserver_1a210eeacd66b3e58c302643210d82965b" prot="private" virt="non-virtual"><scope>myserver</scope><name>authorization</name></member>
      <member refid="classmyserver_1a61f0220fffb9e3b214089d594aea10f1" prot="private" virt="non-virtual"><scope>myserver</scope><name>db</name></member>
      <member refid="classmyserver_1a058ac3bf82d1e370cb3f0bb598b3660a" prot="private" virt="non-virtual"><scope>myserver</scope><name>getAllRatesForGroupAndCourse</name></member>
      <member refid="classmyserver_1aa1c07695b4cb6c4772a23e633e6293d1" prot="private" virt="non-virtual"><scope>myserver</scope><name>getAllStudents</name></member>
      <member refid="classmyserver_1a76ec0e9877030afe8e7fbb78c1a99d90" prot="private" virt="non-virtual"><scope>myserver</scope><name>getCoursesForAddLesson</name></member>
      <member refid="classmyserver_1ae734051abc8cb3406be2717212cbcf89" prot="private" virt="non-virtual"><scope>myserver</scope><name>getCoursesForStudent</name></member>
      <member refid="classmyserver_1adf0c1e9e9255d52250a67a18f042346e" prot="private" virt="non-virtual"><scope>myserver</scope><name>getGroupsForAddLesson</name></member>
      <member refid="classmyserver_1ac3b8e1a161aee25580bc3dc4e19a2343" prot="private" virt="non-virtual"><scope>myserver</scope><name>getLessonForStudentAndCourse</name></member>
      <member refid="classmyserver_1a1f9701f5f91508598c0fcb5a90a7033d" prot="private" virt="non-virtual"><scope>myserver</scope><name>getLessons</name></member>
      <member refid="classmyserver_1a5a3c3fc0310a98f06197383423ebaa6d" prot="private" virt="non-virtual"><scope>myserver</scope><name>getRatesForStudentAndLesson</name></member>
      <member refid="classmyserver_1a7b1e5318d193daceaba56e70d85a1cae" prot="private" virt="non-virtual"><scope>myserver</scope><name>getStudentsFromGroup</name></member>
      <member refid="classmyserver_1a0ead7e6ac76160295e6d4955362c1372" prot="public" virt="non-virtual"><scope>myserver</scope><name>incomingConnection</name></member>
      <member refid="classmyserver_1afab876e482460877a586c804c2e4f6b8" prot="private" virt="non-virtual"><scope>myserver</scope><name>insertRate</name></member>
      <member refid="classmyserver_1ac63e26411d9ab3ac8dd69a1e31095989" prot="public" virt="non-virtual"><scope>myserver</scope><name>myserver</name></member>
      <member refid="classmyserver_1a9029ccccdc2871814af8ec19cd1d0d7e" prot="private" virt="non-virtual"><scope>myserver</scope><name>selectGroups</name></member>
      <member refid="classmyserver_1a667c57294dd0c9573b9615840d3ff7aa" prot="public" virt="non-virtual"><scope>myserver</scope><name>sockDisc</name></member>
      <member refid="classmyserver_1a6c54fb0f829314e8cbbf01586d85ed18" prot="private" virt="non-virtual"><scope>myserver</scope><name>socket</name></member>
      <member refid="classmyserver_1a22c4dbce53178b0e799df2bb5bf384e8" prot="public" virt="non-virtual"><scope>myserver</scope><name>sockReady</name></member>
      <member refid="classmyserver_1ac0262beea1a4f65f458bb2e022be899f" prot="public" virt="non-virtual"><scope>myserver</scope><name>startServer</name></member>
      <member refid="classmyserver_1a074f8ee857234456b6369228171f87f7" prot="public" virt="non-virtual"><scope>myserver</scope><name>~myserver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
